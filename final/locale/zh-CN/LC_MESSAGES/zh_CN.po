# Chinese translations for GF package
# GF 软件包的简体中文翻译.
# Copyright (C) 2022 THE GF'S COPYRIGHT HOLDER
# This file is distributed under the same license as the GF package.
# D.X. He <dxh21@tw711.eng.cam.ac.uk>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: GF 2_Software\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-09 19:02+0100\n"
"PO-Revision-Date: 2022-06-09 20:44+0100\n"
"Last-Translator: scofield <yl732@cam.ac.uk>\n"
"Language-Team: Chinese (simplified) <i18n-zh@googlegroups.com>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: gui.py:1
msgid ""
"Implement the graphical user interface for the Logic Simulator.\n"
"Used in the Logic Simulator project to enable the user to run the simulation\n"
"or adjust the network properties.\n"
"\n"
"Classes:\n"
"--------\n"
"MyGLCanvas - handles all canvas drawing operations.\n"
"Gui - configures the main window and all the widgets.\n"
msgstr ""

#: gui.py:26
msgid "_"
msgstr ""

#: gui.py:28
msgid ""
"Handle all drawing operations.\n"
"\n"
"    This class contains functions for drawing onto the canvas. It\n"
"    also contains handlers for events relating to the canvas.\n"
"\n"
"    Parameters\n"
"    ----------\n"
"    parent: parent window.\n"
"    devices: instance of the devices.Devices() class.\n"
"    monitors: instance of the monitors.Monitors() class.\n"
"\n"
"    Public methods\n"
"    --------------\n"
"    init_gl(self): Configures the OpenGL context.\n"
"\n"
"    render(self, text): Handles all drawing operations.\n"
"\n"
"    on_paint(self, event): Handles the paint event.\n"
"\n"
"    on_size(self, event): Handles the canvas resize event.\n"
"\n"
"    on_mouse(self, event): Handles mouse events.\n"
"\n"
"    render_text(self, text, x_pos, y_pos): Handles text drawing\n"
"                                           operations.\n"
"    "
msgstr ""

#: gui.py:56
msgid "Initialise canvas properties and useful variables."
msgstr ""

#: gui.py:89
msgid "Configure and initialise the OpenGL context."
msgstr ""

#: gui.py:105
msgid "Handle all drawing operations."
msgstr ""

#: gui.py:168
msgid "Handle the paint event."
msgstr ""

#: gui.py:176
msgid "Canvas redrawn on paint event, size is "
msgstr ""

#: gui.py:177
#: gui.py:198
#: gui.py:201
#: gui.py:204
#: gui.py:212
#: gui.py:213
msgid ", "
msgstr ""

#: gui.py:181
msgid "Handle the canvas resize event."
msgstr "重新放置"

#: gui.py:187
msgid "Handle mouse events."
msgstr "鼠标"

#: gui.py:197
msgid "Mouse button pressed at: "
msgstr "鼠标在"

#: gui.py:200
msgid "Mouse button released at: "
msgstr "鼠标在"

#: gui.py:203
msgid "Mouse left canvas at: "
msgstr "鼠标离开"

#: gui.py:211
msgid "Mouse dragged to: "
msgstr "鼠标拖拽"

#: gui.py:212
msgid ". Pan is now: "
msgstr ""

#: gui.py:221
msgid "Negative mouse wheel rotation. Zoom is now: "
msgstr "缩小"

#: gui.py:230
msgid "Positive mouse wheel rotation. Zoom is now: "
msgstr "放大"

#: gui.py:238
msgid "Handle text drawing operations."
msgstr ""

#: gui.py:244
msgid "\n"
msgstr ""

#: gui.py:283
#: gui.py:548
#: gui.py:821
#: gui.py:1304
msgid "Error! Network oscillating."
msgstr ""

#: gui.py:304
#: gui.py:577
msgid "Configures the scrolled panel on the left to hold all switches"
msgstr ""

#: gui.py:321
#: gui.py:594
msgid "button"
msgstr ""

#: gui.py:322
#: gui.py:595
msgid "label"
msgstr ""

#: gui.py:341
#: gui.py:349
msgid "s "
msgstr ""

#: gui.py:341
msgid " 0"
msgstr ""

#: gui.py:349
msgid " 1"
msgstr ""

#: gui.py:354
#: gui.py:627
#: gui.py:1001
#: gui.py:1105
msgid "Read the command entered and call the corresponding function."
msgstr ""

#: gui.py:371
#: gui.py:644
#: gui.py:1118
msgid "q"
msgstr ""

#: gui.py:372
#: gui.py:645
#: gui.py:976
#: gui.py:1119
msgid "Are you sure you want to exit?"
msgstr "确定退出吗"

#: gui.py:372
#: gui.py:645
#: gui.py:976
#: gui.py:1119
msgid "Confirm exit"
msgstr "确定"

#: gui.py:376
#: gui.py:649
#: gui.py:980
#: gui.py:1065
#: gui.py:1123
msgid "The user cancelled"
msgstr ""

#: gui.py:379
#: gui.py:652
#: gui.py:1126
msgid "h"
msgstr ""

#: gui.py:381
#: gui.py:654
#: gui.py:1129
msgid "s"
msgstr ""

#: gui.py:383
#: gui.py:656
#: gui.py:1132
msgid "m"
msgstr ""

#: gui.py:385
#: gui.py:658
#: gui.py:1135
msgid "z"
msgstr ""

#: gui.py:387
#: gui.py:660
#: gui.py:1014
#: gui.py:1042
#: gui.py:1138
msgid "r"
msgstr ""

#: gui.py:389
#: gui.py:662
#: gui.py:1017
#: gui.py:1034
#: gui.py:1141
msgid "c"
msgstr ""

#: gui.py:392
#: gui.py:665
#: gui.py:1021
#: gui.py:1145
msgid "Invalid command. Enter 'h' for help."
msgstr ""

#: gui.py:397
#: gui.py:670
#: gui.py:1027
#: gui.py:1151
msgid "Print prompt for the user and update the user entry."
msgstr ""

#: gui.py:405
#: gui.py:678
#: gui.py:1161
msgid "Return the first non-whitespace character."
msgstr ""

#: gui.py:411
#: gui.py:684
#: gui.py:1167
msgid "Move the cursor forward by one character in the user entry."
msgstr ""

#: gui.py:419
#: gui.py:692
#: gui.py:1175
msgid "Skip whitespace until a non-whitespace character is reached."
msgstr ""

#: gui.py:425
#: gui.py:698
#: gui.py:1181
msgid "Return the next alphanumeric string."
msgstr ""

#: gui.py:429
#: gui.py:702
#: gui.py:1185
msgid "Error! Expected a name."
msgstr ""

#: gui.py:437
#: gui.py:710
#: gui.py:1193
msgid ""
"Return the name ID of the current string if valid.\n"
"\n"
"        Return None if the current string is not a valid name string.\n"
"        "
msgstr ""

#: gui.py:447
#: gui.py:720
#: gui.py:1203
msgid "Error! Unknown name."
msgstr ""

#: gui.py:451
#: gui.py:724
#: gui.py:1207
msgid ""
"Return the device and port IDs of the current signal name.\n"
"\n"
"        Return None if either is invalid.\n"
"        "
msgstr ""

#: gui.py:458
#: gui.py:731
#: gui.py:1214
msgid "."
msgstr ""

#: gui.py:467
#: gui.py:740
#: gui.py:1223
msgid ""
"Return the current number.\n"
"\n"
"        Return None if no number is provided or if it falls outside the valid\n"
"        range.\n"
"        "
msgstr ""

#: gui.py:475
#: gui.py:748
#: gui.py:1231
msgid "Error! Expected a number."
msgstr ""

#: gui.py:484
#: gui.py:489
#: gui.py:757
#: gui.py:762
#: gui.py:1240
#: gui.py:1245
msgid "Number out of range."
msgstr ""

#: gui.py:495
#: gui.py:768
#: gui.py:1251
msgid "Print a list of valid commands."
msgstr ""

#: gui.py:496
#: gui.py:769
#: gui.py:1252
msgid "User commands:"
msgstr ""

#: gui.py:497
#: gui.py:770
#: gui.py:1253
msgid "r N       - run the simulation for N cycles"
msgstr ""

#: gui.py:498
#: gui.py:771
#: gui.py:1254
msgid "c N       - continue the simulation for N cycles"
msgstr ""

#: gui.py:499
#: gui.py:772
#: gui.py:1255
msgid "s X N     - set switch X to N (0 or 1)"
msgstr ""

#: gui.py:500
#: gui.py:773
#: gui.py:1256
msgid "m X       - set a monitor on signal X"
msgstr ""

#: gui.py:501
#: gui.py:774
#: gui.py:1257
msgid "z X       - zap the monitor on signal X"
msgstr ""

#: gui.py:502
#: gui.py:775
#: gui.py:1258
msgid "h         - help (this command)"
msgstr ""

#: gui.py:503
#: gui.py:776
#: gui.py:1259
msgid "q         - quit the program"
msgstr ""

#: gui.py:507
#: gui.py:780
#: gui.py:1263
msgid "Set the specified switch to the specified signal level."
msgstr ""

#: gui.py:513
#: gui.py:786
#: gui.py:1269
msgid "Successfully set switch."
msgstr ""

#: gui.py:515
#: gui.py:788
#: gui.py:1271
msgid "Error! Invalid switch."
msgstr ""

#: gui.py:518
#: gui.py:791
#: gui.py:1274
msgid "Set the specified monitor."
msgstr ""

#: gui.py:525
#: gui.py:798
#: gui.py:1281
msgid "Successfully made monitor."
msgstr ""

#: gui.py:527
#: gui.py:800
#: gui.py:1283
msgid "Error! Could not make monitor."
msgstr ""

#: gui.py:530
#: gui.py:803
#: gui.py:1286
msgid "Remove the specified monitor."
msgstr ""

#: gui.py:535
#: gui.py:808
#: gui.py:1291
msgid "Successfully zapped monitor"
msgstr ""

#: gui.py:537
#: gui.py:810
#: gui.py:1293
msgid "Error! Could not zap monitor."
msgstr ""

#: gui.py:540
#: gui.py:813
#: gui.py:1296
msgid ""
"Run the network for the specified number of simulation cycles.\n"
"\n"
"        Return True if successful.\n"
"        "
msgstr ""

#: gui.py:554
#: gui.py:827
#: gui.py:1310
msgid "Run the simulation from scratch."
msgstr ""

#: gui.py:560
#: gui.py:833
#: gui.py:1316
msgid "Running for "
msgstr ""

#: gui.py:560
#: gui.py:833
#: gui.py:1316
msgid " cycles"
msgstr ""

#: gui.py:566
#: gui.py:839
#: gui.py:1323
msgid "Continue a previously run simulation."
msgstr ""

#: gui.py:570
#: gui.py:843
#: gui.py:1328
msgid "Error! Nothing to continue. Run first."
msgstr ""

#: gui.py:573
#: gui.py:846
#: gui.py:1332
msgid " "
msgstr ""

#: gui.py:573
#: gui.py:846
#: gui.py:1332
msgid "Continuing for"
msgstr ""

#: gui.py:573
#: gui.py:846
#: gui.py:1332
msgid "cycles."
msgstr ""

#: gui.py:574
#: gui.py:847
#: gui.py:1333
msgid "Total:"
msgstr "总共："

#: gui.py:614
msgid "z "
msgstr ""

#: gui.py:622
msgid "m "
msgstr ""

#: gui.py:850
msgid ""
"Configure the main window and all the widgets.\n"
"\n"
"    This class provides a graphical user interface for the Logic Simulator and\n"
"    enables the user to change the circuit properties and run simulations.\n"
"\n"
"    Parameters\n"
"    ----------\n"
"    title: title of the window.\n"
"\n"
"    Public methods\n"
"    --------------\n"
"    on_menu(self, event): Event handler for the file menu.\n"
"\n"
"    on_spin(self, event): Event handler for when the user changes the spin\n"
"                           control value.\n"
"\n"
"    on_run_button(self, event): Event handler for when the user clicks the run\n"
"                                button.\n"
"\n"
"    on_text_box(self, event): Event handler for when the user enters text.\n"
"    "
msgstr ""

#: gui.py:873
msgid "Initialise widgets and layout."
msgstr "初始化"

#: gui.py:875
msgid "LANG"
msgstr ""

#: gui.py:875
#: gui.py:884
msgid "zh_CN"
msgstr ""

#: gui.py:877
msgid "locale"
msgstr ""

#: gui.py:905
msgid "&About"
msgstr ""

#: gui.py:906
msgid "&Open File..."
msgstr "&打开文件"

#: gui.py:907
msgid "&Help"
msgstr ""

#: gui.py:908
msgid "&Exit"
msgstr "&退出"

#: gui.py:909
msgid "&File"
msgstr ""

#: gui.py:917
msgid "Cycles:"
msgstr "模拟周期"

#: gui.py:920
msgid "10"
msgstr "10"

#: gui.py:921
msgid "Run"
msgstr "运行"

#: gui.py:922
msgid "Continue"
msgstr "继续"

#: gui.py:923
msgid "Text based control:"
msgstr "文字控制"

#: gui.py:926
msgid "Type function here"
msgstr "在这键入函数"

#: gui.py:929
msgid "clear"
msgstr "清除"

#: gui.py:930
msgid "Switches:"
msgstr "开关"

#: gui.py:932
msgid "Monitors:"
msgstr "监视器："

#: gui.py:973
msgid "Handle the event when the user selects a menu item."
msgstr ""

#: gui.py:984
msgid ""
"Logic Simulator\n"
"Created by Mojisola Agboola\n"
"2017"
msgstr ""

#: gui.py:985
msgid "About Logsim"
msgstr "有关"

#: gui.py:991
#: gui.py:1086
msgid ""
"\n"
"\n"
msgstr ""

#: gui.py:994
msgid "Handle the event when the user changes the spin control value."
msgstr ""

#: gui.py:996
msgid "New spin control value: "
msgstr "新的周期数"

#: gui.py:1031
#: gui.py:1039
msgid "Handle the event when the user clicks the run button."
msgstr ""

#: gui.py:1032
msgid "Continue button pressed."
msgstr "已继续运行"

#: gui.py:1040
msgid "Run button pressed."
msgstr "已运行"

#: gui.py:1047
#: gui.py:1098
msgid "Handle the event when the user enters text."
msgstr ""

#: gui.py:1049
#: gui.py:1100
msgid "New text box value: "
msgstr "新的输入"

#: gui.py:1052
msgid ""
"if text_box_command_value == \"q\":\n"
"            dlg = wx.MessageDialog(self,\"Are you sure you want to exit?\",\"Confirm exit\",wx.CANCEL | wx.OK)\n"
"            result = dlg.ShowModal()\n"
"            dlg.Destroy()\n"
"            if result == wx.ID_CANCEL:\n"
"                print(\"The user cancelled\")\n"
"            if result == wx.ID_OK:\n"
"                self.Close(True)"
msgstr ""

#: gui.py:1062
msgid "Open txt file"
msgstr "打开txt文件"

#: gui.py:1062
msgid "TXT files (*.txt)|*.txt"
msgstr ""

#: gui.py:1067
msgid "File chosen="
msgstr "文件选择"

#: gui.py:1092
msgid "Handle the event when the user clicks the clear button"
msgstr ""

#: gui.py:1094
msgid "clear button pressed"
msgstr "已清除"

